name: Publish package

on:
  push:
    tags:
      - 'v*' # Push events to matching  i.e. v1.0.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check version
      id: version-check
      run: |
        echo "Previous version: ${{ github.event.before }}"
        echo "New version: ${{ github.event.after }}"
        IFS='.' read -ra prev_version <<< "${{ github.event.before }}"
        IFS='.' read -ra new_version <<< "${{ github.event.after }}"
        if [ ${new_version[0]} -gt ${prev_version[0]} ] || [ ${new_version[1]} -gt ${prev_version[1]} ] || [ ${new_version[2]} -gt ${prev_version[2]} ]; then
          echo "::set-output name=version-changed::true"
        else
          echo "::set-output name=version-changed::false"
          echo "Version was not incremented as expected. Stopping workflow..."
          exit 1
        fi
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Extract Version
      run: echo "VERSION=${{ github.ref#v }}" >> $GITHUB_ENV

    - name: Build solution
      working-directory: src/Openbus.AzureServiceBus
      run: dotnet build --configuration Release --version-suffix=$VERSION

    - name: Publish NuGet packages
      working-directory: src/Openbus.AzureServiceBus --version-suffix=$VERSION
      run: |
        dotnet pack --configuration Release --output ./nuget
        dotnet nuget push Openbus.AzureServiceBus.*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
    
    - name: Create Release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
